// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CPU {
  id                        Int      @id @default(autoincrement())
  name                      String
  imageUrl                  String?
  productUrl                String?
  price                     Float?
  manufacturer              String?
  series                    String?
  microarchitecture         String?
  socket                    String?
  coreCount                 Int?
  performanceCoreClock      Float?
  performanceCoreBoostClock Float?
  efficiencyCoreClock       Float?
  efficiencyCoreBoostClock  Float?
  l2Cache                   String?
  l3Cache                   String?
  tdp                       Int?
  integratedGraphics        String?
  maxSupportedMemory        String?
  includesCooler            Boolean?
  simultaneousMultithreading Boolean?
  personalPCs               PersonalPC[]
}

model Case {
  id                    Int      @id @default(autoincrement())
  name                  String
  imageUrl              String?
  productUrl            String?
  price                 Float?
  manufacturer          String?
  partNumber            String?
  type                  String?
  color                 String?
  powerSupply           String?
  sidePanel             String?
  powerSupplyShroud     Boolean?
  frontPanelUsb         String?
  motherboardFormFactor String?
  maxVideoCardLength    Int?
  driveBays             String?
  expansionSlots        String?
  dimensions            String?
  personalPCs           PersonalPC[]
}

model GPU {
  id                     Int      @id @default(autoincrement())
  name                   String
  imageUrl               String?
  productUrl             String?
  price                  Float?
  manufacturer           String?
  chipset                String?
  memory                 String?
  memoryType             String?
  coreClock              Float?
  boostClock             Float?
  effectiveMemoryClock   Float?
  color                  String?
  frameSync              String?
  length                 Int?
  tdp                    Int?
  caseExpansionSlotWidth Int?
  totalSlotWidth         Int?
  externalPower          String?
  personalPCs            PersonalPC[]
}
model Memory {
  id                 Int      @id @default(autoincrement())
  name               String
  imageUrl           String?
  productUrl         String?
  price              Float?
  manufacturer       String?
  speed              String?
  formFactor         String?
  modules            Int?
  pricePerGb         Float?
  color              String?
  firstWordLatency   Float?
  casLatency         Float?
  voltage            Float?
  timing             String?
  heatSpreader       Boolean?
  specsNumber        String?
  personalPCs        PersonalPC[]
}

model Motherboard {
  id                   Int      @id @default(autoincrement())
  name                 String
  imageUrl             String?
  productUrl           String?
  price                Float?
  manufacturer         String?
  chipset              String?
  memoryMax            Int?
  memoryType           String?
  memorySlots          Int?
  memorySpeed          String?
  pcieX16Slots         Int?
  m2Slots              Int?
  sata6Gbps            Int?
  onboardEthernet      Boolean?
  usb20Headers         Int?
  usb32Gen1Headers     Int?
  usb32Gen2Headers     Int?
  usb32Gen2x2Headers   Int?
  wirelessNetworking   Boolean?
  socket               String?
  formFactor           String?
  personalPCs          PersonalPC[]
}

model PowerSupply {
  id         Int      @id @default(autoincrement())
  name       String
  price      Float?
  type       String?
  efficiency String?
  wattage    Int?
  modular    Boolean?
  color      String?
  personalPCs PersonalPC[]
}

model Storage {
  id           Int      @id @default(autoincrement())
  name         String
  type         String?
  imageUrl     String?
  productUrl   String?
  price        Float?
  manufacturer String?
  capacity     String?
  cache        String?
  formFactor   String?
  personalPCs  PersonalPC[]
}

model User {
  id           Int          @id @default(autoincrement())
  username     String       @unique
  email        String       @unique
  password     String
  createdAt    DateTime     @default(now())
  personalPCs  PersonalPC[]
}
